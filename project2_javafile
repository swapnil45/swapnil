package com.example.fb;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;

import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.params.BasicHttpParams;
import org.apache.http.params.HttpConnectionParams;
import org.apache.http.params.HttpParams;
import org.json.JSONObject;

import com.facebook.android.AsyncFacebookRunner;
import com.facebook.android.DialogError;
import com.facebook.android.Facebook;
import com.facebook.android.FacebookError;
import com.facebook.android.Facebook.DialogListener;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;
import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.SharedPreferences;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;

public class MainActivity extends Activity {
	Button btnFacebook;
	Context context = MainActivity.this;
	// please put your APP-ID below
	String Facebook_APP_ID = "1611518745736619";// don't forget most important
	Facebook facebook = new Facebook(Facebook_APP_ID);
	AsyncFacebookRunner mAsyncRunner = new AsyncFacebookRunner(facebook);
	private SharedPreferences mPrefs;
	String access_token;
	Boolean Connectiontimeout = false;
	String imageURL = "";
	Bitmap profilePic;
	ImageView userImage;
	TextView textName;
	TextView textUserName;
	TextView textGender;
	String name = "";
	String userName = "";
	String gender = "";

	@Override
	/**
	 * @author swapnil
	 */
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		btnFacebook = (Button) findViewById(R.id.btn_facebook);
		userImage = (ImageView) findViewById(R.id.imageView1);
		textName = (TextView) findViewById(R.id.textView2);
		textUserName = (TextView) findViewById(R.id.textView4);
		textGender = (TextView) findViewById(R.id.textView6);
		/**
		 * on click facebook button
		 */
		btnFacebook.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				/**
				 * check for network connectivity
				 */
				if (isNetworkAvailable(context) == true) {
					accessTokenFacebook();

				} else {
					Toast.makeText(MainActivity.this, "No Network Connection",
							Toast.LENGTH_SHORT).show();
				}

			}
		});
	}

	/**
	 * Network testing method you can put it into Helper/Utility class also
	 */
	public static boolean isNetworkAvailable(Context mContext) {

		ConnectivityManager cm = (ConnectivityManager) mContext
				.getSystemService(Context.CONNECTIVITY_SERVICE);
		NetworkInfo networkInfo = cm.getActiveNetworkInfo();
		if (networkInfo != null && networkInfo.isConnected()) {
			Log.e("Network Testing", "***Available***");
			return true;
		}
		Log.e("Network Testing", "***Not Available***");
		return false;
	}

	/**
	 * Function to get facebook Access token
	 * */

	public void accessTokenFacebook() {

		mPrefs = getPreferences(MODE_PRIVATE);
		access_token = mPrefs.getString("access_token", null);
		long expires = mPrefs.getLong("access_expires", 0);
		// Log.e("Facebook token", access_token);

		if (access_token != null) {
			facebook.setAccessToken(access_token);
		}
		if (expires != 0) {
			facebook.setAccessExpires(expires);
		}

		/**
		 * Only call authorize if the access_token has expired.
		 */
		if (!facebook.isSessionValid()) {

			facebook.authorize(this, new String[] {}, new DialogListener() {
				public void onComplete(Bundle values) {
					try {
						JSONObject me = new JSONObject(facebook.request("me"));
						SharedPreferences.Editor editor = mPrefs.edit();
						String id = me.getString("id");
						System.out
								.println("******facebook.getAccessToken()****"
										+ facebook.getAccessToken());
						editor.putString("userid", id);
						editor.putString("access_token",
								facebook.getAccessToken());
						editor.putLong("access_expires",
								facebook.getAccessExpires());
						editor.commit();
						new getFacebookData().execute();
					} catch (Exception e) {
						// TODO: handle exception
					}
				}

				public void onFacebookError(FacebookError error) {
				}

				public void onError(DialogError e) {
				}

				public void onCancel() {
				}
			});
		} else {
			new getFacebookData().execute();
		}

	}

	/**
	 * Async class for getting facebook data in background thread
	 *
	 * @author swapnil
	 *
	 */

	public class getFacebookData extends AsyncTask<String, Void, String> {

		ProgressDialog pd = null;

		@Override
		protected void onPreExecute() {
			pd = ProgressDialog.show(MainActivity.this, "Please wait",
					"Loading please wait..", true);
			pd.setCancelable(true);

		}

		@Override
		protected String doInBackground(String... params) {
			fbUserProfile();
			return null;
		}

		@Override
		protected void onPostExecute(String result) {
			pd.dismiss();
			if (Connectiontimeout != true) {
				textName.setText(name);
				textUserName.setText(userName);
				textGender.setText(gender);
				userImage.setImageBitmap(profilePic);
			} else {
				Toast.makeText(MainActivity.this, "Connection Time out",
						Toast.LENGTH_SHORT).show();
			}
		}

	}

	/**
	 * getting user facebook data from facebook server
	 */
	public void fbUserProfile() {

		try {
			access_token = mPrefs.getString("access_token", null);
			JSONObject jsonObj = null;
			JSONObject jsonObjData = null;
			JSONObject jsonObjUrl = null;
			HttpParams httpParameters = new BasicHttpParams();
			HttpConnectionParams.setConnectionTimeout(httpParameters, 50000);
			HttpConnectionParams.setSoTimeout(httpParameters, 50000);

			HttpClient client = new DefaultHttpClient(httpParameters);

			String requestURL = "https://graph.facebook.com/me?fields=picture,id,name,gender,username&access_token="
					+ access_token;
			Log.i("Request URL:", "---" + requestURL);
			HttpGet request = new HttpGet(requestURL);

			HttpResponse response = client.execute(request);
			BufferedReader rd = new BufferedReader(new InputStreamReader(
					response.getEntity().getContent()));
			String webServiceInfo = "";

			while ((webServiceInfo = rd.readLine()) != null) {
				Log.i("Service Response:", "====================>>>>>" + webServiceInfo);
				jsonObj = new JSONObject(webServiceInfo);
				jsonObjData = jsonObj.getJSONObject("picture");
				jsonObjUrl = jsonObjData.getJSONObject("data");
				name = jsonObj.getString("name");
				userName = jsonObj.getString("username");
				gender = jsonObj.getString("gender");
				imageURL = jsonObjUrl.getString("url");
				profilePic = BitmapFactory.decodeStream((InputStream) new URL(
						imageURL).getContent());
			}

		} catch (Exception e) {
			Connectiontimeout = true;
		}
	}

}
